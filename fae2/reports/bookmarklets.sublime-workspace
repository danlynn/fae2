{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"true",
				"true"
			],
			[
				"back",
				"background-color"
			],
			[
				"get",
				"getRuleScope"
			],
			[
				"Rul",
				"RuleGroupResult"
			],
			[
				"h1",
				"id_h1_title"
			],
			[
				"s",
				"slug"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/accessible-name-forms.html",
			"settings":
			{
				"buffer_size": 4320,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/table.css",
			"settings":
			{
				"buffer_size": 725,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/core.css",
			"settings":
			{
				"buffer_size": 1108,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/** \n * @namespace aria\n */\n\nvar aria = aria || {};\n\n/* ---------------------------------------------------------------- */\n/*                  ARIA Widget Namespace                        */ \n/* ---------------------------------------------------------------- */\n\naria.widget = aria.widget || {};\n\n/* ---------------------------------------------------------------- */\n/*                  Source code generators                          */\n/* ---------------------------------------------------------------- */\n\n/**\n * @constructor SourceCode\n *\n * @memberOf aria.Widget\n *\n * @desc  Creates a slider widget using ARIA \n *\n * @property  location      Array  -  Object containing the keyCodes used by the slider widget\n * @property  code          Array  -  JQuery node object\n */\n\naria.widget.SourceCode = function() {\n  this.location = new Array();\n  this.code = new Array();\n}\n\n/**\n * @method add\n *\n * @memberOf aria.widget.SourceCode\n *\n * @desc  Adds source code \n */\n \naria.widget.SourceCode.prototype.add = function( location_id, code_id ) {\n  this.location[this.location.length] = location_id;\n  this.code[this.code.length] = code_id;\n}\n\n/**\n * @method make\n *\n * @memberOf aria.widget.SourceCode\n *\n * @desc  Generates HTML content for source code \n */\n \naria.widget.SourceCode.prototype.make = function() {\n\n  var node_code;\n  var node_location;\n\n\n  for(var i = 0; i < this.location.length; i++ ) {\n     \n     node_location = document.getElementById( this.location[i] );\n     node_code     = document.getElementById( this.code[i] );\n     \n     node_location.className = \"sourcecode\";\n\n    var n = node_code.firstChild;\n\n    while(n) {\n  \n      switch( n.nodeType ) {\n    \n        case Node.ELEMENT_NODE:\n     node_location = document.getElementById( this.location[i] );\n          this.createCode( node_location, \"\", n );\n          break;\n\n        default:\n          break;\n      }  // end switch\n      n = n.nextSibling;  \n    } // end while  \n  } // endfor    \n}\n\n/**\n * @method createCode\n *\n * @memberOf aria.widget.SourceCode\n *\n * @desc  Specify the source code and the location of the source code\n *\n * @param  location   String   - id of element to put the source code\n * @param  spaces     String   - Any spaces to precede the source code\n * @param  node       Object   - DOM Element node to use to generate the source code\n */\n \naria.widget.SourceCode.prototype.createCode = function(location, spaces, node) {\n\n  function hasText(s) {\n    if (typeof s !== 'string') return false;\n  \n    for(var i = 0; i < s.length; i++) {\n      var c = s[i]\n      if (c !== ' ' && c !== '\\n' && c !== '\\r') return true;\n    }\n    return false;\n  }\n\n  if (typeof first !== 'boolean') first = true;\n\n  var i;\n\n  var node_name = node.nodeName.toLowerCase();\n\n  location.innerHTML = location.innerHTML + \"<br/>\" + spaces + \"&lt;\" + node_name;\n\n  for(i=0; i < node.attributes.length; i++ ) {\n \n     if(!((node_name == \"script\" ) || (node_name == \"style\"))) { \n          \n       location.innerHTML = location.innerHTML + \"&nbsp;\" + node.attributes[i].nodeName + \"=\\\"\";\n       location.innerHTML = location.innerHTML + node.attributes[i].value + \"\\\"\";\n     \n       if( ((i + 1) != node.attributes.length) && (node.attributes.length > 2 ) ) {\n\n          location.innerHTML = location.innerHTML + \"<br/>\" + spaces;\n        \n          for(var j=2; j <= node_name.length; j++ )\n            location.innerHTML = location.innerHTML + \"&nbsp;\";\n             \n       } // endif\n \n    } // endif\n \n  }  // endfor\n  \n  location.innerHTML = location.innerHTML + \"&gt;\";\n\n  var count = 0;\n\n  var n = node.firstChild;\n\n  while(n) {\n  \n    switch( n.nodeType ) {\n    \n      case Node.ELEMENT_NODE:\n         this.createCode( location, spaces + \"&nbsp;&nbsp;\", n);\n           count++;\n         break;\n\n      case Node.TEXT_NODE:\n           if (hasText(n.nodeValue)) {\n             location.innerHTML = location.innerHTML + \"<br/>\" + spaces + \"&nbsp;&nbsp;\" + n.nodeValue;\n           }  \n           count++;\n         break;\n\n\n    }  // end switch\n\n    n = n.nextSibling;  \n\n  } // end while\n\n    if( count > 0 ) { \n      location.innerHTML = location.innerHTML + \"<br/>\" + spaces + \"&lt;/\" + node.nodeName.toLowerCase();\n      location.innerHTML = location.innerHTML + \"&gt;\";\n    } // end if\n\n}\n\nvar sourceCode = new aria.widget.SourceCode();\n\n\n",
			"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/examples.js",
			"file_size": 4259,
			"file_write_time": 130948586830000000,
			"settings":
			{
				"buffer_size": 4325,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jongund/GitHub/jongund/bookmarklets",
		"/Users/jongund/GitHub/jongund/bookmarklets/tests",
		"/Users/jongund/GitHub/jongund/bookmarklets/tests/common"
	],
	"file_history":
	[
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/reports/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae-util/save_website_results_sql.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/base.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_information.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/archived.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae-util/save_website_results_sql.py.bak.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae-util/fae-util.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/reports/views.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/processing.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/rulesets/urls.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/reports/urls.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/run_anonymous_report.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/processing_anonymous.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/page_information.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/url_information.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/base.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae-util/save_markup_information.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_page_group_rule.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/pageResults/admin.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/pageResults/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_page_group.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_page.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_group_rule.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/static/css/fae2.css",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/element_results.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/rule_details.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/data/jongund/report_00001/data/faeUtil-0001.json",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_group_rule_page.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/websiteResults/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/static/js/hide-show.js",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/page_results.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/populate/pop_rules.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/populate/pop_wcag20.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/rules/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/data/jongund/report_00001/report_00001.properties",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/rules/admin.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/markupInfo/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/websiteResults/admin.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_group.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/reports/admin.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/rule_result.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae-util/uiuc-disability/faeUtil-0024.json",
		"/Users/jongund/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/wcag20/admin.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/wcag20/models.py",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/implementation_status.html",
		"/Users/jongund/GitHub/jongund/oaa-fae2/fae2/fae2/templates/reports/report_summary.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"spaces",
			";\";",
			"&lt;/",
			"width",
			"table",
			"LoginRequiredMixin",
			"title",
			"datetime",
			"TZ",
			"USE_TZ",
			"updateReports",
			"django.core.context_processors.request",
			"ann",
			"Annon",
			"ProcessingAnnonymousReportView",
			"markup",
			"reverse",
			"not_a",
			"not_app",
			"message",
			"rawdata",
			"showHide",
			"\"showHide",
			"sort",
			"pages_",
			"getWebsiteRuleResult",
			"ws_result",
			" DataRuleResult][saveToDjango",
			"[DataPageResult][addPageRuleResult]",
			"addPageRuleResult",
			"Error adding page rule result:",
			"getWebsiteRuleResult",
			"etWebsiteRuleResult",
			"InformationalLink",
			"slug",
			"WebsiteRe",
			"re.",
			"re",
			"rule_id",
			".slug",
			"WebsiteRe",
			"ws_result",
			"WebsiteResult",
			"WebsiteResults",
			"rule_id",
			"in"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Anon",
			"elements_"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/accessible-name-forms.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4320,
						"regions":
						{
						},
						"selection":
						[
							[
								3591,
								3591
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1728.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/table.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 725,
						"regions":
						{
						},
						"selection":
						[
							[
								434,
								434
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/core.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1108,
						"regions":
						{
						},
						"selection":
						[
							[
								965,
								965
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 258.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/jongund/GitHub/jongund/bookmarklets/tests/common/examples.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4325,
						"regions":
						{
						},
						"selection":
						[
							[
								1780,
								1780
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 672.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bookmarklets.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 384.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
